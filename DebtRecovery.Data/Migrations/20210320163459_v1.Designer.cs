// <auto-generated />
using System;
using DebtRecovery.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DebtRecovery.Data.Migrations
{
    [DbContext(typeof(DebtRecoveryContext))]
    [Migration("20210320163459_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DebtRecovery.Domain.Models.Activity", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Automatic_send")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FK_Scenario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Media")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActivityId");

                    b.HasIndex("FK_Scenario");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Bill", b =>
                {
                    b.Property<Guid>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Datecreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Datedeadline")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FK_Client")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModePayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("Numberpayments")
                        .HasColumnType("int");

                    b.Property<float>("Totalamount")
                        .HasColumnType("real");

                    b.Property<int>("scenario_state")
                        .HasColumnType("int");

                    b.HasKey("BillId");

                    b.HasIndex("FK_Client");

                    b.ToTable("Bill");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Bill_Trip", b =>
                {
                    b.Property<Guid>("Bill_TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FK_Bill")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Bill_TripId");

                    b.HasIndex("FK_Bill");

                    b.ToTable("bill_Trip");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FK_Agent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FK_Scenario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Profil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telephonenumber")
                        .HasColumnType("int");

                    b.Property<int>("Telephonenumberfixe")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.HasIndex("FK_Agent");

                    b.HasIndex("FK_Scenario");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.History", b =>
                {
                    b.Property<Guid>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FK_Bill")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("HistoryId");

                    b.HasIndex("FK_Bill");

                    b.ToTable("History");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Note", b =>
                {
                    b.Property<Guid>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FK_Bill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NoteId");

                    b.HasIndex("FK_Bill");

                    b.ToTable("Note");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Payment", b =>
                {
                    b.Property<Guid>("PaymentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amountpaid")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FK_Bill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Payrollamount")
                        .HasColumnType("real");

                    b.HasKey("PaymentID");

                    b.HasIndex("FK_Bill");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Promise", b =>
                {
                    b.Property<Guid>("PromissId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FK_Bill")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PromissId");

                    b.HasIndex("FK_Bill");

                    b.ToTable("Promise");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Scenario", b =>
                {
                    b.Property<Guid>("ScenarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ScenarioId");

                    b.ToTable("Scenario");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("FK_Role")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Identitycard")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Subsidiary_Code")
                        .HasColumnType("int");

                    b.Property<int>("Telephonenumber")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("FK_Role");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.RecoveryAgent", b =>
                {
                    b.HasBaseType("DebtRecovery.Domain.Models.User");

                    b.Property<Guid?>("FK_Manager")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("FK_Manager");

                    b.HasDiscriminator().HasValue("RecoveryAgent");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.RecoveryManager", b =>
                {
                    b.HasBaseType("DebtRecovery.Domain.Models.User");

                    b.HasDiscriminator().HasValue("RecoveryManager");
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Activity", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Scenario", "Scenario")
                        .WithMany("Activities")
                        .HasForeignKey("FK_Scenario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Bill", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Client", "client")
                        .WithMany("Bills")
                        .HasForeignKey("FK_Client")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Bill_Trip", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Bill", "Bill")
                        .WithMany("Bill_Trips")
                        .HasForeignKey("FK_Bill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Client", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.RecoveryAgent", "RecoveryAgent")
                        .WithMany("Clients")
                        .HasForeignKey("FK_Agent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebtRecovery.Domain.Models.Scenario", "scenario")
                        .WithMany("Clients")
                        .HasForeignKey("FK_Scenario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.History", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Bill", "Bill")
                        .WithMany("histories")
                        .HasForeignKey("FK_Bill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Note", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Bill", "Bill")
                        .WithMany("Notes")
                        .HasForeignKey("FK_Bill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Payment", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Bill", "Bill")
                        .WithMany("Payments")
                        .HasForeignKey("FK_Bill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.Promise", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Bill", "Bill")
                        .WithMany("Promesses")
                        .HasForeignKey("FK_Bill")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.User", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("FK_Role")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DebtRecovery.Domain.Models.RecoveryAgent", b =>
                {
                    b.HasOne("DebtRecovery.Domain.Models.RecoveryManager", "RecoveryManager")
                        .WithMany("RecoveryAgents")
                        .HasForeignKey("FK_Manager");
                });
#pragma warning restore 612, 618
        }
    }
}
